{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Form/Form.module.css","components/Section/Section.module.css","components/ContactsFilter/ContactsFilter.module.css","components/App.module.css","components/Section/Section.js","components/Form/Form.js","components/Contacts/ContactItem.js","components/Contacts/Contacts.js","components/ContactsFilter/ContactsFilter.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Form","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","reset","this","form","label","input","type","onChange","pattern","required","button","Component","ContactItem","id","onDelete","item","text","onClick","Contacts","contacts","list","map","ContactsFilter","App","filter","addContact","console","log","contact","uuidv4","find","alert","deleteContact","contactId","prevState","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","sort","a","b","localeCompare","localContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a09604ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2rwMi\",\"text\":\"Contacts_text__HhpMy\",\"button\":\"Contacts_button__1Og5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3IVNc\",\"label\":\"Form_label___u49a\",\"input\":\"Form_input__2VvqM\",\"button\":\"Form_button__gOTpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2Y7ob\",\"title\":\"Section_title__1ieF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactsFilter_label__2IIe1\",\"input\":\"ContactsFilter_input__Vo0WM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2VMyW\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Form.module.css';\r\n\r\nexport default class Form extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li className={s.item} key={id}>\r\n      <span className={s.text}>{name} :</span>\r\n      <span className={s.text}>{number}</span>\r\n      <button\r\n        className={s.button}\r\n        onClick={() => {\r\n          onDelete(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport ContactItem from './ContactItem';\r\n\r\nconst Contacts = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactsFilter.module.css';\r\n\r\nconst ContactsFilter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Filter contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nContactsFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'modern-normalize/modern-normalize.css';\nimport s from './App.module.css';\nimport Section from './Section';\nimport Form from './Form';\nimport Contacts from './Contacts';\nimport ContactsFilter from './ContactsFilter/ContactsFilter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      {\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56',\n      },\n      {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12',\n      },\n      {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79',\n      },\n      {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26',\n      },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    console.log(name, number);\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : contacts.find(contact => contact.number === number)\n      ? alert(`${number} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts\n      .filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(localContacts);\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.filterContacts();\n    return (\n      <>\n        <Section title={'Phonebook'}>\n          <Form onSubmit={this.addContact} />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <div className={s.container}>\n            <ContactsFilter value={filter} onChange={this.changeFilter} />\n            <Contacts\n              contacts={visibleContacts}\n              onDelete={this.deleteContact}\n            />\n          </div>\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}